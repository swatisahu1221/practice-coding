Given an array of size N containing only 0s, 1s, and 2s; sort the array in ascending order.


Example 1:

Input: 
N = 5
arr[]= {0 2 1 2 0}
Output:
0 0 1 2 2
Explanation:
0s 1s and 2s are segregated 
into ascending order.
Example 2:

Input: 
N = 3
arr[] = {0 1 0}
Output:
0 0 1
Explanation:
0s 1s and 2s are segregated 
into ascending order.

Your Task:
You don't need to read input or print anything. Your task is to complete the function sort012() that takes an array arr and N as input parameters and sorts the array in-place.


Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)


Constraints:
1 <= N <= 10^6
0 <= A[i] <= 2




class Solution
{
    public static void sort012(int arr[], int n)
    {
        // code here 
        int a=0,b=0;
        for(int i=0; i<n; i++){
            if(arr[i]==0)
                {++a; //System.out.println(a);
                }
            else if(arr[i]==1)
                {++b; //System.out.println(b);
                }
            
        }
        for(int i=0; i<a; i++)
            {arr[i]=0; //System.out.println(arr[i]);
            }
        for(int i=a; i<a+b; i++)
            {arr[i]=1; //System.out.println(arr[i]);
            }
        for(int i=a+b; i<n; i++)
            {arr[i]=2; //System.out.println(arr[i]);
            }
    }
}